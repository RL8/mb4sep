SETUP PROCESS

cd my-shadcn-app
npx shadcn@latest init
The CLI will ask you a series of questions. Here are the typical choices for a standard setup:

Which style would you like to use? Default

Which color would you like to use as base color? Slate

Where is your global CSS file? app/globals.css

Would you like to use CSS variables for colors? Yes

Where is your tailwind.config.ts located? tailwind.config.ts

Configure the import alias for components? @/components

Configure the import alias for utils? @/lib/utils

Are you using React Server Components? Yes



------------------------------------------

ONGOING MONITORING

Strict Project Conventions: Establish a clear rule that all new UI components must be created using the shadcn/ui primitives. This can be enforced in code reviews.

Linting and Static Analysis: You can use tools like ESLint to enforce rules that prevent certain types of code, or to ensure that components are imported from the correct directory (@/components/ui).


-------------------------------------

 Creating a Custom "Gallery" üñºÔ∏è

 
A common practice among developers using shadcn/ui is to create a dedicated page in their application to serve as a component gallery or style guide. This allows you to visually see and interact with all your components in one place.

How to Build It:

Create a new page file in your Next.js app directory, for example, app/gallery/page.tsx.

On this page, import each component you have added.

Render each component with various props and states (e.g., disabled button, different card styles, open dialog).

You can even add headings and descriptions to organize the components visually.

This manual gallery approach is a great way to "visualise all the snippets" and also serves as a valuable resource for maintaining a consistent design system within your project.